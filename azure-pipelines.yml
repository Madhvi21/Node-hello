# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- main
stages:
- stage: Build
  displayName: BuildArtifact
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest

    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'
      displayName: 'Install Node.js'

    - script: |
        npm install  --if-present
        npm run build  --if-present
      displayName: 'npm install and build'
      
    - task: CopyFiles@2
      inputs:
            SourceFolder: '$(system.defaultworkingdirectory)'
            Contents: '*.json'
            TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: ArchiveFiles@2
      inputs:
                rootFolderOrFile: '$(Build.BinariesDirectory)'
                includeRootFolder: true
                archiveType: 'zip'
                archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
                replaceExistingArchive: true
    - task: PublishBuildArtifacts@1
      inputs:
                PathtoPublish: '$(Build.ArtifactStagingDirectory)'
                ArtifactName: 'drop'
                publishLocation: 'Container'
                      
- stage: Deploy
  displayName: Deploy Build
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: $(environmentName)
    pool:
      vmImage: ubuntu-latest
      strategy:
        runOnce:
          deploy:
            steps:
            
            - task: AzureRmWebAppDeployment@4
              displayName: 'Azure Web App Deploy: TxDevOpsNodeWebApp'
              inputs:
                ConnectionType: 'AzureRM'
                azureSubscription: 'Visual Studio Enterprise â€“ MPN (da791a4e-3933-4213-a43e-f94f3e2187c3)'
                appType: 'webApp'
                WebAppName: 'Txnode-deployin1'
                deployToSlotOrASE: true
                ResourceGroupName: 'Tx-DevOps-trainee'
                SlotName: 'production'
                packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'
                
